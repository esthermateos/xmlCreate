package com.isb.vega.externalization.generator.xml;

import com.isb.vega.externalization.generator.xml.Utils;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class Connectors {
  public static CharSequence doGenerateTrxOP() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<trxOp>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpProtocol>");
    _builder.append("</trxOpProtocol>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpDefaultMode>");
    _builder.append("</trxOpDefaultMode>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpRedGProtocol>");
    _builder.append("</trxOpRedGProtocol>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpTCPAlias>");
    _builder.append("</trxOpTCPAlias>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpLogicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<trxOpLogicalChannel name=\"");
    _builder.append("\">");
    _builder.append("</trxOpLogicalChannel>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</trxOpLogicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpPyshicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<trxOpPyshicalChannel name=\"");
    _builder.append("\">");
    _builder.append("</trxOpPyshicalChannel>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<trxOpStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<trxOpState>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<transaction>");
    _builder.append("</transaction>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<operation>");
    _builder.append("</operation>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>");
    _builder.append("</version>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<alias>");
    _builder.append("</alias>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<protocol>");
    _builder.append("</protocol>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<transactionMode>");
    _builder.append("</transactionMode>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</trxOpState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</trxOpStates>");
    _builder.newLine();
    _builder.append("</trxOp>\t");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence doGenerateSat() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<sat>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satProtocol>");
    _builder.append("</satProtocol>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satAlias>");
    _builder.append("</satAlias>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satTimeOut>");
    _builder.append("</satTimeOut>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satNullValues>");
    _builder.append("</satNullValues>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satNullWhenSpaces>");
    _builder.append("</satNullWhenSpaces>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satLogicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<satLogicalChannel name=\"");
    _builder.append("\">");
    _builder.append("</satLogicalChannel>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</satLogicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satPyshicalChannels>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<satPyshicalChannel name=\"");
    _builder.append("\">");
    _builder.append("</satPyshicalChannel>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<satStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<satState>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<satName>");
    _builder.append("</satName>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesFoot = Utils.doGenerateFieldStatesFoot();
    _builder.append(_doGenerateFieldStatesFoot, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("</satState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</satStates>");
    _builder.newLine();
    _builder.append("</sat>\t");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence doGenerateAltair() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<altair>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<altairProtocol>");
    _builder.append("</altairProtocol>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<altairAlias>");
    _builder.append("</altairAlias>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<altairStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<altairState>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<transaction>");
    _builder.append("</transaction>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesFoot = Utils.doGenerateFieldStatesFoot();
    _builder.append(_doGenerateFieldStatesFoot, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("</altairState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</altairStates>");
    _builder.newLine();
    _builder.append("</altair>");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence doGenerateBboo() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<bboo>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<bbooStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<bbooState>");
    _builder.newLine();
    _builder.append("\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "		");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<alias>");
    _builder.append("</alias>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<document>");
    _builder.append("</document>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<provider>");
    _builder.append("</provider>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</bbooState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</bbooStates>");
    _builder.newLine();
    _builder.append("</bboo>\t");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence doGenerateSiebel() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<siebel>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<siebelStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<siebelState>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<server>");
    _builder.append("</server>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<object>");
    _builder.append("</type>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<request>");
    _builder.append("</request>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</siebelState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</siebelStates>");
    _builder.newLine();
    _builder.append("</siebel>\t");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence doGenerateTp() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<tp>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<tpStates>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tpState>");
    _builder.newLine();
    _builder.append("\t\t\t");
    CharSequence _doGenerateFieldStatesHead = Utils.doGenerateFieldStatesHead();
    _builder.append(_doGenerateFieldStatesHead, "			");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<code>");
    _builder.append("</code>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<type>");
    _builder.append("</type>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<subtype>");
    _builder.append("</subtype>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</tpState>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tpStates>");
    _builder.newLine();
    _builder.append("</tp>\t");
    _builder.newLine();
    return _builder;
  }
}
